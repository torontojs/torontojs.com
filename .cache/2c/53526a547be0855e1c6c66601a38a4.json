{"id":"../node_modules/core-js/modules/es6.math.hypot.js","dependencies":[{"name":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/package.json","includedInParent":true,"mtime":1572820182646},{"name":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/package.json","includedInParent":true,"mtime":1572818838640},{"name":"./_export","loc":{"line":2,"column":22},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/es6.math.hypot.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/_export.js"}],"generated":{"js":"// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\nvar $export = require('./_export')\n  , abs     = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars\n    var sum  = 0\n      , i    = 0\n      , aLen = arguments.length\n      , larg = 0\n      , arg, div;\n    while(i < aLen){\n      arg = abs(arguments[i++]);\n      if(larg < arg){\n        div  = larg / arg;\n        sum  = sum * div * div + 1;\n        larg = arg;\n      } else if(arg > 0){\n        div  = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/core-js/modules/es6.math.hypot.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"../node_modules/core-js/modules/es6.math.hypot.js":"// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\nvar $export = require('./_export')\n  , abs     = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars\n    var sum  = 0\n      , i    = 0\n      , aLen = arguments.length\n      , larg = 0\n      , arg, div;\n    while(i < aLen){\n      arg = abs(arguments[i++]);\n      if(larg < arg){\n        div  = larg / arg;\n        sum  = sum * div * div + 1;\n        larg = arg;\n      } else if(arg > 0){\n        div  = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});"},"lineCount":25}},"error":null,"hash":"2012a2ec731445b8a7ab73e67cdd25ae","cacheData":{"env":{}}}