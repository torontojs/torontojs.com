{"id":"../node_modules/mdurl/encode.js","dependencies":[{"name":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/package.json","includedInParent":true,"mtime":1572820182646},{"name":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/mdurl/package.json","includedInParent":true,"mtime":1568056041898}],"generated":{"js":"\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mdurl/encode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mdurl/encode.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}}],"sources":{"../node_modules/mdurl/encode.js":"\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n"},"lineCount":99}},"error":null,"hash":"c4ca33a576192e99cc00eb65ccf05380","cacheData":{"env":{}}}