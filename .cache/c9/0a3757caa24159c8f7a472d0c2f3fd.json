{"id":"../node_modules/commonmark/lib/inlines.js","dependencies":[{"name":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/package.json","includedInParent":true,"mtime":1572820182646},{"name":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/commonmark/package.json","includedInParent":true,"mtime":1572818838819},{"name":"./node","loc":{"line":3,"column":19},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/commonmark/lib/inlines.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/commonmark/lib/node.js"},{"name":"./common","loc":{"line":4,"column":21},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/commonmark/lib/inlines.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/commonmark/lib/common.js"},{"name":"./normalize-reference","loc":{"line":5,"column":33},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/commonmark/lib/inlines.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/commonmark/lib/normalize-reference.js"},{"name":"./from-code-point.js","loc":{"line":9,"column":28},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/commonmark/lib/inlines.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/commonmark/lib/from-code-point.js"},{"name":"entities","loc":{"line":10,"column":25},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/commonmark/lib/inlines.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/entities/index.js"},{"name":"string.prototype.repeat","loc":{"line":11,"column":8},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/commonmark/lib/inlines.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/string.prototype.repeat/repeat.js"}],"generated":{"js":"\"use strict\";\n\nvar Node = require('./node');\nvar common = require('./common');\nvar normalizeReference = require('./normalize-reference');\n\nvar normalizeURI = common.normalizeURI;\nvar unescapeString = common.unescapeString;\nvar fromCodePoint = require('./from-code-point.js');\nvar decodeHTML = require('entities').decodeHTML;\nrequire('string.prototype.repeat'); // Polyfill for String.prototype.repeat\n\n// Constants for character codes:\n\nvar C_NEWLINE = 10;\nvar C_ASTERISK = 42;\nvar C_UNDERSCORE = 95;\nvar C_BACKTICK = 96;\nvar C_OPEN_BRACKET = 91;\nvar C_CLOSE_BRACKET = 93;\nvar C_LESSTHAN = 60;\nvar C_BANG = 33;\nvar C_BACKSLASH = 92;\nvar C_AMPERSAND = 38;\nvar C_OPEN_PAREN = 40;\nvar C_CLOSE_PAREN = 41;\nvar C_COLON = 58;\nvar C_SINGLEQUOTE = 39;\nvar C_DOUBLEQUOTE = 34;\n\n// Some regexps used in inline parser:\n\nvar ESCAPABLE = common.ESCAPABLE;\nvar ESCAPED_CHAR = '\\\\\\\\' + ESCAPABLE;\nvar REG_CHAR = '[^\\\\\\\\()\\\\x00-\\\\x20]';\nvar IN_PARENS_NOSP = '\\\\((' + REG_CHAR + '|' + ESCAPED_CHAR + '|\\\\\\\\)*\\\\)';\n\nvar ENTITY = common.ENTITY;\nvar reHtmlTag = common.reHtmlTag;\n\nvar rePunctuation = new RegExp(/^[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#\\$%&\\(\\)\\*\\+,\\-\\.\\/:;<=>\\?@\\[\\]\\^_`\\{\\|\\}~]/);\n\nvar reLinkTitle = new RegExp(\n    '^(?:\"(' + ESCAPED_CHAR + '|[^\"\\\\x00])*\"' +\n        '|' +\n        '\\'(' + ESCAPED_CHAR + '|[^\\'\\\\x00])*\\'' +\n        '|' +\n        '\\\\((' + ESCAPED_CHAR + '|[^)\\\\x00])*\\\\))');\n\nvar reLinkDestinationBraces = new RegExp(\n    '^(?:[<](?:[^ <>\\\\t\\\\n\\\\\\\\\\\\x00]' + '|' + ESCAPED_CHAR + '|' + '\\\\\\\\)*[>])');\n\nvar reLinkDestination = new RegExp(\n    '^(?:' + REG_CHAR + '+|' + ESCAPED_CHAR + '|\\\\\\\\|' + IN_PARENS_NOSP + ')*');\n\nvar reEscapable = new RegExp('^' + ESCAPABLE);\n\nvar reEntityHere = new RegExp('^' + ENTITY, 'i');\n\nvar reTicks = /`+/;\n\nvar reTicksHere = /^`+/;\n\nvar reEllipses = /\\.\\.\\./g;\n\nvar reDash = /--+/g;\n\nvar reEmailAutolink = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\n\nvar reAutolink = /^<[A-Za-z][A-Za-z0-9.+-]{1,31}:[^<>\\x00-\\x20]*>/i;\n\nvar reSpnl = /^ *(?:\\n *)?/;\n\nvar reWhitespaceChar = /^\\s/;\n\nvar reWhitespace = /\\s+/g;\n\nvar reFinalSpace = / *$/;\n\nvar reInitialSpace = /^ */;\n\nvar reSpaceAtEndOfLine = /^ *(?:\\n|$)/;\n\nvar reLinkLabel = new RegExp('^\\\\[(?:[^\\\\\\\\\\\\[\\\\]]|' + ESCAPED_CHAR +\n  '|\\\\\\\\){0,1000}\\\\]');\n\n// Matches a string of non-special characters.\nvar reMain = /^[^\\n`\\[\\]\\\\!<&*_'\"]+/m;\n\nvar text = function(s) {\n    var node = new Node('Text');\n    node._literal = s;\n    return node;\n};\n\n// INLINE PARSER\n\n// These are methods of an InlineParser object, defined below.\n// An InlineParser keeps track of a subject (a string to be\n// parsed) and a position in that subject.\n\n// If re matches at current position in the subject, advance\n// position in subject and return the match; otherwise return null.\nvar match = function(re) {\n    var m = re.exec(this.subject.slice(this.pos));\n    if (m === null) {\n        return null;\n    } else {\n        this.pos += m.index + m[0].length;\n        return m[0];\n    }\n};\n\n// Returns the code for the character at the current subject position, or -1\n// there are no more characters.\nvar peek = function() {\n    if (this.pos < this.subject.length) {\n        return this.subject.charCodeAt(this.pos);\n    } else {\n        return -1;\n    }\n};\n\n// Parse zero or more space characters, including at most one newline\nvar spnl = function() {\n    this.match(reSpnl);\n    return true;\n};\n\n// All of the parsers below try to match something at the current position\n// in the subject.  If they succeed in matching anything, they\n// return the inline matched, advancing the subject.\n\n// Attempt to parse backticks, adding either a backtick code span or a\n// literal sequence of backticks.\nvar parseBackticks = function(block) {\n    var ticks = this.match(reTicksHere);\n    if (ticks === null) {\n        return false;\n    }\n    var afterOpenTicks = this.pos;\n    var matched;\n    var node;\n    while ((matched = this.match(reTicks)) !== null) {\n        if (matched === ticks) {\n            node = new Node('Code');\n            node._literal = this.subject.slice(afterOpenTicks,\n                                        this.pos - ticks.length)\n                          .trim().replace(reWhitespace, ' ');\n            block.appendChild(node);\n            return true;\n        }\n    }\n    // If we got here, we didn't match a closing backtick sequence.\n    this.pos = afterOpenTicks;\n    block.appendChild(text(ticks));\n    return true;\n};\n\n// Parse a backslash-escaped special character, adding either the escaped\n// character, a hard line break (if the backslash is followed by a newline),\n// or a literal backslash to the block's children.  Assumes current character\n// is a backslash.\nvar parseBackslash = function(block) {\n    var subj = this.subject;\n    var node;\n    this.pos += 1;\n    if (this.peek() === C_NEWLINE) {\n        this.pos += 1;\n        node = new Node('Hardbreak');\n        block.appendChild(node);\n    } else if (reEscapable.test(subj.charAt(this.pos))) {\n        block.appendChild(text(subj.charAt(this.pos)));\n        this.pos += 1;\n    } else {\n        block.appendChild(text('\\\\'));\n    }\n    return true;\n};\n\n// Attempt to parse an autolink (URL or email in pointy brackets).\nvar parseAutolink = function(block) {\n    var m;\n    var dest;\n    var node;\n    if ((m = this.match(reEmailAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node('Link');\n        node._destination = normalizeURI('mailto:' + dest);\n        node._title = '';\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else if ((m = this.match(reAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node('Link');\n        node._destination = normalizeURI(dest);\n        node._title = '';\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Attempt to parse a raw HTML tag.\nvar parseHtmlTag = function(block) {\n    var m = this.match(reHtmlTag);\n    if (m === null) {\n        return false;\n    } else {\n        var node = new Node('HtmlInline');\n        node._literal = m;\n        block.appendChild(node);\n        return true;\n    }\n};\n\n// Scan a sequence of characters with code cc, and return information about\n// the number of delimiters and whether they are positioned such that\n// they can open and/or close emphasis or strong emphasis.  A utility\n// function for strong/emph parsing.\nvar scanDelims = function(cc) {\n    var numdelims = 0;\n    var char_before, char_after, cc_after;\n    var startpos = this.pos;\n    var left_flanking, right_flanking, can_open, can_close;\n    var after_is_whitespace, after_is_punctuation, before_is_whitespace, before_is_punctuation;\n\n    if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        numdelims++;\n        this.pos++;\n    } else {\n        while (this.peek() === cc) {\n            numdelims++;\n            this.pos++;\n        }\n    }\n\n    if (numdelims === 0) {\n        return null;\n    }\n\n    char_before = startpos === 0 ? '\\n' : this.subject.charAt(startpos - 1);\n\n    cc_after = this.peek();\n    if (cc_after === -1) {\n        char_after = '\\n';\n    } else {\n        char_after = fromCodePoint(cc_after);\n    }\n\n    after_is_whitespace = reWhitespaceChar.test(char_after);\n    after_is_punctuation = rePunctuation.test(char_after);\n    before_is_whitespace = reWhitespaceChar.test(char_before);\n    before_is_punctuation = rePunctuation.test(char_before);\n\n    left_flanking = !after_is_whitespace &&\n            !(after_is_punctuation && !before_is_whitespace && !before_is_punctuation);\n    right_flanking = !before_is_whitespace &&\n            !(before_is_punctuation && !after_is_whitespace && !after_is_punctuation);\n    if (cc === C_UNDERSCORE) {\n        can_open = left_flanking &&\n            (!right_flanking || before_is_punctuation);\n        can_close = right_flanking &&\n            (!left_flanking || after_is_punctuation);\n    } else if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        can_open = left_flanking && !right_flanking;\n        can_close = right_flanking;\n    } else {\n        can_open = left_flanking;\n        can_close = right_flanking;\n    }\n    this.pos = startpos;\n    return { numdelims: numdelims,\n             can_open: can_open,\n             can_close: can_close };\n};\n\n// Handle a delimiter marker for emphasis or a quote.\nvar handleDelim = function(cc, block) {\n    var res = this.scanDelims(cc);\n    if (!res) {\n        return false;\n    }\n    var numdelims = res.numdelims;\n    var startpos = this.pos;\n    var contents;\n\n    this.pos += numdelims;\n    if (cc === C_SINGLEQUOTE) {\n        contents = \"\\u2019\";\n    } else if (cc === C_DOUBLEQUOTE) {\n        contents = \"\\u201C\";\n    } else {\n        contents = this.subject.slice(startpos, this.pos);\n    }\n    var node = text(contents);\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    this.delimiters = { cc: cc,\n                        numdelims: numdelims,\n                        node: node,\n                        previous: this.delimiters,\n                        next: null,\n                        can_open: res.can_open,\n                        can_close: res.can_close,\n                        active: true };\n    if (this.delimiters.previous !== null) {\n        this.delimiters.previous.next = this.delimiters;\n    }\n\n    return true;\n\n};\n\nvar removeDelimiter = function(delim) {\n    if (delim.previous !== null) {\n        delim.previous.next = delim.next;\n    }\n    if (delim.next === null) {\n        // top of stack\n        this.delimiters = delim.previous;\n    } else {\n        delim.next.previous = delim.previous;\n    }\n};\n\nvar removeDelimitersBetween = function(bottom, top) {\n    if (bottom.next !== top) {\n        bottom.next = top;\n        top.previous = bottom;\n    }\n};\n\nvar processEmphasis = function(stack_bottom) {\n    var opener, closer, old_closer;\n    var opener_inl, closer_inl;\n    var tempstack;\n    var use_delims;\n    var tmp, next;\n    var opener_found;\n    var openers_bottom = [];\n\n    openers_bottom[C_UNDERSCORE] = stack_bottom;\n    openers_bottom[C_ASTERISK] = stack_bottom;\n    openers_bottom[C_SINGLEQUOTE] = stack_bottom;\n    openers_bottom[C_DOUBLEQUOTE] = stack_bottom;\n\n    // find first closer above stack_bottom:\n    closer = this.delimiters;\n    while (closer !== null && closer.previous !== stack_bottom) {\n        closer = closer.previous;\n    }\n    // move forward, looking for closers, and handling each\n    while (closer !== null) {\n        var closercc = closer.cc;\n        if (!(closer.can_close && (closercc === C_UNDERSCORE ||\n                                   closercc === C_ASTERISK ||\n                                   closercc === C_SINGLEQUOTE ||\n                                   closercc === C_DOUBLEQUOTE))) {\n            closer = closer.next;\n        } else {\n            // found emphasis closer. now look back for first matching opener:\n            opener = closer.previous;\n            opener_found = false;\n            while (opener !== null && opener !== stack_bottom &&\n                   opener !== openers_bottom[closercc]) {\n                if (opener.cc === closer.cc && opener.can_open) {\n                    opener_found = true;\n                    break;\n                }\n                opener = opener.previous;\n            }\n            old_closer = closer;\n\n            if (closercc === C_ASTERISK || closercc === C_UNDERSCORE) {\n                if (!opener_found) {\n                    closer = closer.next;\n                } else {\n                    // calculate actual number of delimiters used from closer\n                    if (closer.numdelims < 3 || opener.numdelims < 3) {\n                        use_delims = closer.numdelims <= opener.numdelims ?\n                            closer.numdelims : opener.numdelims;\n                    } else {\n                        use_delims = closer.numdelims % 2 === 0 ? 2 : 1;\n                    }\n\n                    opener_inl = opener.node;\n                    closer_inl = closer.node;\n\n                    // remove used delimiters from stack elts and inlines\n                    opener.numdelims -= use_delims;\n                    closer.numdelims -= use_delims;\n                    opener_inl._literal =\n                        opener_inl._literal.slice(0,\n                                                  opener_inl._literal.length - use_delims);\n                    closer_inl._literal =\n                        closer_inl._literal.slice(0,\n                                                  closer_inl._literal.length - use_delims);\n\n                    // build contents for new emph element\n                    var emph = new Node(use_delims === 1 ? 'Emph' : 'Strong');\n\n                    tmp = opener_inl._next;\n                    while (tmp && tmp !== closer_inl) {\n                        next = tmp._next;\n                        tmp.unlink();\n                        emph.appendChild(tmp);\n                        tmp = next;\n                    }\n\n                    opener_inl.insertAfter(emph);\n\n                    // remove elts between opener and closer in delimiters stack\n                    removeDelimitersBetween(opener, closer);\n\n                    // if opener has 0 delims, remove it and the inline\n                    if (opener.numdelims === 0) {\n                        opener_inl.unlink();\n                        this.removeDelimiter(opener);\n                    }\n\n                    if (closer.numdelims === 0) {\n                        closer_inl.unlink();\n                        tempstack = closer.next;\n                        this.removeDelimiter(closer);\n                        closer = tempstack;\n                    }\n\n                }\n\n            } else if (closercc === C_SINGLEQUOTE) {\n                closer.node._literal = \"\\u2019\";\n                if (opener_found) {\n                    opener.node._literal = \"\\u2018\";\n                }\n                closer = closer.next;\n\n            } else if (closercc === C_DOUBLEQUOTE) {\n                closer.node._literal = \"\\u201D\";\n                if (opener_found) {\n                    opener.node.literal = \"\\u201C\";\n                }\n                closer = closer.next;\n\n            }\n            if (!opener_found) {\n                // Set lower bound for future searches for openers:\n                openers_bottom[closercc] = old_closer.previous;\n                if (!old_closer.can_open) {\n                    // We can remove a closer that can't be an opener,\n                    // once we've seen there's no matching opener:\n                    this.removeDelimiter(old_closer);\n                }\n            }\n        }\n\n    }\n\n    // remove all delimiters\n    while (this.delimiters !== null && this.delimiters !== stack_bottom) {\n        this.removeDelimiter(this.delimiters);\n    }\n};\n\n// Attempt to parse link title (sans quotes), returning the string\n// or null if no match.\nvar parseLinkTitle = function() {\n    var title = this.match(reLinkTitle);\n    if (title === null) {\n        return null;\n    } else {\n        // chop off quotes from title and unescape:\n        return unescapeString(title.substr(1, title.length - 2));\n    }\n};\n\n// Attempt to parse link destination, returning the string or\n// null if no match.\nvar parseLinkDestination = function() {\n    var res = this.match(reLinkDestinationBraces);\n    if (res === null) {\n        res = this.match(reLinkDestination);\n        if (res === null) {\n            return null;\n        } else {\n            return normalizeURI(unescapeString(res));\n        }\n    } else {  // chop off surrounding <..>:\n        return normalizeURI(unescapeString(res.substr(1, res.length - 2)));\n    }\n};\n\n// Attempt to parse a link label, returning number of characters parsed.\nvar parseLinkLabel = function() {\n    var m = this.match(reLinkLabel);\n    if (m === null || m.length > 1001) {\n        return 0;\n    } else {\n        return m.length;\n    }\n};\n\n// Add open bracket to delimiter stack and add a text node to block's children.\nvar parseOpenBracket = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n\n    var node = text('[');\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    this.delimiters = { cc: C_OPEN_BRACKET,\n                        numdelims: 1,\n                        node: node,\n                        previous: this.delimiters,\n                        next: null,\n                        can_open: true,\n                        can_close: false,\n                        index: startpos,\n                        active: true };\n    if (this.delimiters.previous !== null) {\n        this.delimiters.previous.next = this.delimiters;\n    }\n\n    return true;\n\n};\n\n// IF next character is [, and ! delimiter to delimiter stack and\n// add a text node to block's children.  Otherwise just add a text node.\nvar parseBang = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n    if (this.peek() === C_OPEN_BRACKET) {\n        this.pos += 1;\n\n        var node = text('![');\n        block.appendChild(node);\n\n        // Add entry to stack for this opener\n        this.delimiters = { cc: C_BANG,\n                            numdelims: 1,\n                            node: node,\n                            previous: this.delimiters,\n                            next: null,\n                            can_open: true,\n                            can_close: false,\n                            index: startpos + 1,\n                            active: true };\n        if (this.delimiters.previous !== null) {\n            this.delimiters.previous.next = this.delimiters;\n        }\n    } else {\n        block.appendChild(text('!'));\n    }\n    return true;\n};\n\n// Try to match close bracket against an opening in the delimiter\n// stack.  Add either a link or image, or a plain [ character,\n// to block's children.  If there is a matching delimiter,\n// remove it from the delimiter stack.\nvar parseCloseBracket = function(block) {\n    var startpos;\n    var is_image;\n    var dest;\n    var title;\n    var matched = false;\n    var reflabel;\n    var opener;\n\n    this.pos += 1;\n    startpos = this.pos;\n\n    // look through stack of delimiters for a [ or ![\n    opener = this.delimiters;\n\n    while (opener !== null) {\n        if (opener.cc === C_OPEN_BRACKET || opener.cc === C_BANG) {\n            break;\n        }\n        opener = opener.previous;\n    }\n\n    if (opener === null) {\n        // no matched opener, just return a literal\n        block.appendChild(text(']'));\n        return true;\n    }\n\n    if (!opener.active) {\n        // no matched opener, just return a literal\n        block.appendChild(text(']'));\n        // take opener off emphasis stack\n        this.removeDelimiter(opener);\n        return true;\n    }\n\n    // If we got here, open is a potential opener\n    is_image = opener.cc === C_BANG;\n\n    // Check to see if we have a link/image\n\n    // Inline link?\n    if (this.peek() === C_OPEN_PAREN) {\n        this.pos++;\n        if (this.spnl() &&\n            ((dest = this.parseLinkDestination()) !== null) &&\n            this.spnl() &&\n            // make sure there's a space before the title:\n            (reWhitespaceChar.test(this.subject.charAt(this.pos - 1)) &&\n             (title = this.parseLinkTitle()) || true) &&\n            this.spnl() &&\n            this.peek() === C_CLOSE_PAREN) {\n            this.pos += 1;\n            matched = true;\n        }\n    } else {\n\n        // Next, see if there's a link label\n        var savepos = this.pos;\n        var beforelabel = this.pos;\n        var n = this.parseLinkLabel();\n        if (n === 0 || n === 2) {\n            // empty or missing second label\n            reflabel = this.subject.slice(opener.index, startpos);\n        } else {\n            reflabel = this.subject.slice(beforelabel, beforelabel + n);\n        }\n        if (n === 0) {\n            // If shortcut reference link, rewind before spaces we skipped.\n            this.pos = savepos;\n        }\n\n        // lookup rawlabel in refmap\n        var link = this.refmap[normalizeReference(reflabel)];\n        if (link) {\n            dest = link.destination;\n            title = link.title;\n            matched = true;\n        }\n    }\n\n    if (matched) {\n        var node = new Node(is_image ? 'Image' : 'Link');\n        node._destination = dest;\n        node._title = title || '';\n\n        var tmp, next;\n        tmp = opener.node._next;\n        while (tmp) {\n            next = tmp._next;\n            tmp.unlink();\n            node.appendChild(tmp);\n            tmp = next;\n        }\n        block.appendChild(node);\n        this.processEmphasis(opener.previous);\n\n        opener.node.unlink();\n\n        // processEmphasis will remove this and later delimiters.\n        // Now, for a link, we also deactivate earlier link openers.\n        // (no links in links)\n        if (!is_image) {\n          opener = this.delimiters;\n          while (opener !== null) {\n            if (opener.cc === C_OPEN_BRACKET) {\n                opener.active = false; // deactivate this opener\n            }\n            opener = opener.previous;\n          }\n        }\n\n        return true;\n\n    } else { // no match\n\n        this.removeDelimiter(opener);  // remove this opener from stack\n        this.pos = startpos;\n        block.appendChild(text(']'));\n        return true;\n    }\n\n};\n\n// Attempt to parse an entity.\nvar parseEntity = function(block) {\n    var m;\n    if ((m = this.match(reEntityHere))) {\n        block.appendChild(text(decodeHTML(m)));\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a run of ordinary characters, or a single character with\n// a special meaning in markdown, as a plain string.\nvar parseString = function(block) {\n    var m;\n    if ((m = this.match(reMain))) {\n        if (this.options.smart) {\n            block.appendChild(text(\n                m.replace(reEllipses, \"\\u2026\")\n                    .replace(reDash, function(chars) {\n                        var enCount = 0;\n                        var emCount = 0;\n                        if (chars.length % 3 === 0) { // If divisible by 3, use all em dashes\n                            emCount = chars.length / 3;\n                        } else if (chars.length % 2 === 0) { // If divisible by 2, use all en dashes\n                            enCount = chars.length / 2;\n                        } else if (chars.length % 3 === 2) { // If 2 extra dashes, use en dash for last 2; em dashes for rest\n                            enCount = 1;\n                            emCount = (chars.length - 2) / 3;\n                        } else { // Use en dashes for last 4 hyphens; em dashes for rest\n                            enCount = 2;\n                            emCount = (chars.length - 4) / 3;\n                        }\n                        return \"\\u2014\".repeat(emCount) + \"\\u2013\".repeat(enCount);\n                    })));\n        } else {\n            block.appendChild(text(m));\n        }\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a newline.  If it was preceded by two spaces, return a hard\n// line break; otherwise a soft line break.\nvar parseNewline = function(block) {\n    this.pos += 1; // assume we're at a \\n\n    // check previous node for trailing spaces\n    var lastc = block._lastChild;\n    if (lastc && lastc.type === 'Text' && lastc._literal[lastc._literal.length - 1] === ' ') {\n        var hardbreak = lastc._literal[lastc._literal.length - 2] === ' ';\n        lastc._literal = lastc._literal.replace(reFinalSpace, '');\n        block.appendChild(new Node(hardbreak ? 'Hardbreak' : 'Softbreak'));\n    } else {\n        block.appendChild(new Node('Softbreak'));\n    }\n    this.match(reInitialSpace); // gobble leading spaces in next line\n    return true;\n};\n\n// Attempt to parse a link reference, modifying refmap.\nvar parseReference = function(s, refmap) {\n    this.subject = s;\n    this.pos = 0;\n    var rawlabel;\n    var dest;\n    var title;\n    var matchChars;\n    var startpos = this.pos;\n\n    // label:\n    matchChars = this.parseLinkLabel();\n    if (matchChars === 0) {\n        return 0;\n    } else {\n        rawlabel = this.subject.substr(0, matchChars);\n    }\n\n    // colon:\n    if (this.peek() === C_COLON) {\n        this.pos++;\n    } else {\n        this.pos = startpos;\n        return 0;\n    }\n\n    //  link url\n    this.spnl();\n\n    dest = this.parseLinkDestination();\n    if (dest === null || dest.length === 0) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var beforetitle = this.pos;\n    this.spnl();\n    title = this.parseLinkTitle();\n    if (title === null) {\n        title = '';\n        // rewind before spaces\n        this.pos = beforetitle;\n    }\n\n    // make sure we're at line end:\n    var atLineEnd = true;\n    if (this.match(reSpaceAtEndOfLine) === null) {\n        if (title === '') {\n            atLineEnd = false;\n        } else {\n            // the potential title we found is not at the line end,\n            // but it could still be a legal link reference if we\n            // discard the title\n            title = '';\n            // rewind before spaces\n            this.pos = beforetitle;\n            // and instead check if the link URL is at the line end\n            atLineEnd = this.match(reSpaceAtEndOfLine) !== null;\n        }\n    }\n\n    if (!atLineEnd) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var normlabel = normalizeReference(rawlabel);\n    if (normlabel === '') {\n        // label must contain non-whitespace characters\n        this.pos = startpos;\n        return 0;\n    }\n\n    if (!refmap[normlabel]) {\n        refmap[normlabel] = { destination: dest, title: title };\n    }\n    return this.pos - startpos;\n};\n\n// Parse the next inline element in subject, advancing subject position.\n// On success, add the result to block's children and return true.\n// On failure, return false.\nvar parseInline = function(block) {\n    var res = false;\n    var c = this.peek();\n    if (c === -1) {\n        return false;\n    }\n    switch(c) {\n    case C_NEWLINE:\n        res = this.parseNewline(block);\n        break;\n    case C_BACKSLASH:\n        res = this.parseBackslash(block);\n        break;\n    case C_BACKTICK:\n        res = this.parseBackticks(block);\n        break;\n    case C_ASTERISK:\n    case C_UNDERSCORE:\n        res = this.handleDelim(c, block);\n        break;\n    case C_SINGLEQUOTE:\n    case C_DOUBLEQUOTE:\n        res = this.options.smart && this.handleDelim(c, block);\n        break;\n    case C_OPEN_BRACKET:\n        res = this.parseOpenBracket(block);\n        break;\n    case C_BANG:\n        res = this.parseBang(block);\n        break;\n    case C_CLOSE_BRACKET:\n        res = this.parseCloseBracket(block);\n        break;\n    case C_LESSTHAN:\n        res = this.parseAutolink(block) || this.parseHtmlTag(block);\n        break;\n    case C_AMPERSAND:\n        res = this.parseEntity(block);\n        break;\n    default:\n        res = this.parseString(block);\n        break;\n    }\n    if (!res) {\n        this.pos += 1;\n        block.appendChild(text(fromCodePoint(c)));\n    }\n\n    return true;\n};\n\n// Parse string content in block into inline children,\n// using refmap to resolve references.\nvar parseInlines = function(block) {\n    this.subject = block._string_content.trim();\n    this.pos = 0;\n    this.delimiters = null;\n    while (this.parseInline(block)) {\n    }\n    block._string_content = null; // allow raw string to be garbage collected\n    this.processEmphasis(null);\n};\n\n// The InlineParser object.\nfunction InlineParser(options){\n    return {\n        subject: '',\n        delimiters: null,  // used by handleDelim method\n        pos: 0,\n        refmap: {},\n        match: match,\n        peek: peek,\n        spnl: spnl,\n        parseBackticks: parseBackticks,\n        parseBackslash: parseBackslash,\n        parseAutolink: parseAutolink,\n        parseHtmlTag: parseHtmlTag,\n        scanDelims: scanDelims,\n        handleDelim: handleDelim,\n        parseLinkTitle: parseLinkTitle,\n        parseLinkDestination: parseLinkDestination,\n        parseLinkLabel: parseLinkLabel,\n        parseOpenBracket: parseOpenBracket,\n        parseCloseBracket: parseCloseBracket,\n        parseBang: parseBang,\n        parseEntity: parseEntity,\n        parseString: parseString,\n        parseNewline: parseNewline,\n        parseReference: parseReference,\n        parseInline: parseInline,\n        processEmphasis: processEmphasis,\n        removeDelimiter: removeDelimiter,\n        options: options || {},\n        parse: parseInlines\n    };\n}\n\nmodule.exports = InlineParser;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/commonmark/lib/inlines.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}}],"sources":{"../node_modules/commonmark/lib/inlines.js":"\"use strict\";\n\nvar Node = require('./node');\nvar common = require('./common');\nvar normalizeReference = require('./normalize-reference');\n\nvar normalizeURI = common.normalizeURI;\nvar unescapeString = common.unescapeString;\nvar fromCodePoint = require('./from-code-point.js');\nvar decodeHTML = require('entities').decodeHTML;\nrequire('string.prototype.repeat'); // Polyfill for String.prototype.repeat\n\n// Constants for character codes:\n\nvar C_NEWLINE = 10;\nvar C_ASTERISK = 42;\nvar C_UNDERSCORE = 95;\nvar C_BACKTICK = 96;\nvar C_OPEN_BRACKET = 91;\nvar C_CLOSE_BRACKET = 93;\nvar C_LESSTHAN = 60;\nvar C_BANG = 33;\nvar C_BACKSLASH = 92;\nvar C_AMPERSAND = 38;\nvar C_OPEN_PAREN = 40;\nvar C_CLOSE_PAREN = 41;\nvar C_COLON = 58;\nvar C_SINGLEQUOTE = 39;\nvar C_DOUBLEQUOTE = 34;\n\n// Some regexps used in inline parser:\n\nvar ESCAPABLE = common.ESCAPABLE;\nvar ESCAPED_CHAR = '\\\\\\\\' + ESCAPABLE;\nvar REG_CHAR = '[^\\\\\\\\()\\\\x00-\\\\x20]';\nvar IN_PARENS_NOSP = '\\\\((' + REG_CHAR + '|' + ESCAPED_CHAR + '|\\\\\\\\)*\\\\)';\n\nvar ENTITY = common.ENTITY;\nvar reHtmlTag = common.reHtmlTag;\n\nvar rePunctuation = new RegExp(/^[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#\\$%&\\(\\)\\*\\+,\\-\\.\\/:;<=>\\?@\\[\\]\\^_`\\{\\|\\}~]/);\n\nvar reLinkTitle = new RegExp(\n    '^(?:\"(' + ESCAPED_CHAR + '|[^\"\\\\x00])*\"' +\n        '|' +\n        '\\'(' + ESCAPED_CHAR + '|[^\\'\\\\x00])*\\'' +\n        '|' +\n        '\\\\((' + ESCAPED_CHAR + '|[^)\\\\x00])*\\\\))');\n\nvar reLinkDestinationBraces = new RegExp(\n    '^(?:[<](?:[^ <>\\\\t\\\\n\\\\\\\\\\\\x00]' + '|' + ESCAPED_CHAR + '|' + '\\\\\\\\)*[>])');\n\nvar reLinkDestination = new RegExp(\n    '^(?:' + REG_CHAR + '+|' + ESCAPED_CHAR + '|\\\\\\\\|' + IN_PARENS_NOSP + ')*');\n\nvar reEscapable = new RegExp('^' + ESCAPABLE);\n\nvar reEntityHere = new RegExp('^' + ENTITY, 'i');\n\nvar reTicks = /`+/;\n\nvar reTicksHere = /^`+/;\n\nvar reEllipses = /\\.\\.\\./g;\n\nvar reDash = /--+/g;\n\nvar reEmailAutolink = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\n\nvar reAutolink = /^<[A-Za-z][A-Za-z0-9.+-]{1,31}:[^<>\\x00-\\x20]*>/i;\n\nvar reSpnl = /^ *(?:\\n *)?/;\n\nvar reWhitespaceChar = /^\\s/;\n\nvar reWhitespace = /\\s+/g;\n\nvar reFinalSpace = / *$/;\n\nvar reInitialSpace = /^ */;\n\nvar reSpaceAtEndOfLine = /^ *(?:\\n|$)/;\n\nvar reLinkLabel = new RegExp('^\\\\[(?:[^\\\\\\\\\\\\[\\\\]]|' + ESCAPED_CHAR +\n  '|\\\\\\\\){0,1000}\\\\]');\n\n// Matches a string of non-special characters.\nvar reMain = /^[^\\n`\\[\\]\\\\!<&*_'\"]+/m;\n\nvar text = function(s) {\n    var node = new Node('Text');\n    node._literal = s;\n    return node;\n};\n\n// INLINE PARSER\n\n// These are methods of an InlineParser object, defined below.\n// An InlineParser keeps track of a subject (a string to be\n// parsed) and a position in that subject.\n\n// If re matches at current position in the subject, advance\n// position in subject and return the match; otherwise return null.\nvar match = function(re) {\n    var m = re.exec(this.subject.slice(this.pos));\n    if (m === null) {\n        return null;\n    } else {\n        this.pos += m.index + m[0].length;\n        return m[0];\n    }\n};\n\n// Returns the code for the character at the current subject position, or -1\n// there are no more characters.\nvar peek = function() {\n    if (this.pos < this.subject.length) {\n        return this.subject.charCodeAt(this.pos);\n    } else {\n        return -1;\n    }\n};\n\n// Parse zero or more space characters, including at most one newline\nvar spnl = function() {\n    this.match(reSpnl);\n    return true;\n};\n\n// All of the parsers below try to match something at the current position\n// in the subject.  If they succeed in matching anything, they\n// return the inline matched, advancing the subject.\n\n// Attempt to parse backticks, adding either a backtick code span or a\n// literal sequence of backticks.\nvar parseBackticks = function(block) {\n    var ticks = this.match(reTicksHere);\n    if (ticks === null) {\n        return false;\n    }\n    var afterOpenTicks = this.pos;\n    var matched;\n    var node;\n    while ((matched = this.match(reTicks)) !== null) {\n        if (matched === ticks) {\n            node = new Node('Code');\n            node._literal = this.subject.slice(afterOpenTicks,\n                                        this.pos - ticks.length)\n                          .trim().replace(reWhitespace, ' ');\n            block.appendChild(node);\n            return true;\n        }\n    }\n    // If we got here, we didn't match a closing backtick sequence.\n    this.pos = afterOpenTicks;\n    block.appendChild(text(ticks));\n    return true;\n};\n\n// Parse a backslash-escaped special character, adding either the escaped\n// character, a hard line break (if the backslash is followed by a newline),\n// or a literal backslash to the block's children.  Assumes current character\n// is a backslash.\nvar parseBackslash = function(block) {\n    var subj = this.subject;\n    var node;\n    this.pos += 1;\n    if (this.peek() === C_NEWLINE) {\n        this.pos += 1;\n        node = new Node('Hardbreak');\n        block.appendChild(node);\n    } else if (reEscapable.test(subj.charAt(this.pos))) {\n        block.appendChild(text(subj.charAt(this.pos)));\n        this.pos += 1;\n    } else {\n        block.appendChild(text('\\\\'));\n    }\n    return true;\n};\n\n// Attempt to parse an autolink (URL or email in pointy brackets).\nvar parseAutolink = function(block) {\n    var m;\n    var dest;\n    var node;\n    if ((m = this.match(reEmailAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node('Link');\n        node._destination = normalizeURI('mailto:' + dest);\n        node._title = '';\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else if ((m = this.match(reAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node('Link');\n        node._destination = normalizeURI(dest);\n        node._title = '';\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Attempt to parse a raw HTML tag.\nvar parseHtmlTag = function(block) {\n    var m = this.match(reHtmlTag);\n    if (m === null) {\n        return false;\n    } else {\n        var node = new Node('HtmlInline');\n        node._literal = m;\n        block.appendChild(node);\n        return true;\n    }\n};\n\n// Scan a sequence of characters with code cc, and return information about\n// the number of delimiters and whether they are positioned such that\n// they can open and/or close emphasis or strong emphasis.  A utility\n// function for strong/emph parsing.\nvar scanDelims = function(cc) {\n    var numdelims = 0;\n    var char_before, char_after, cc_after;\n    var startpos = this.pos;\n    var left_flanking, right_flanking, can_open, can_close;\n    var after_is_whitespace, after_is_punctuation, before_is_whitespace, before_is_punctuation;\n\n    if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        numdelims++;\n        this.pos++;\n    } else {\n        while (this.peek() === cc) {\n            numdelims++;\n            this.pos++;\n        }\n    }\n\n    if (numdelims === 0) {\n        return null;\n    }\n\n    char_before = startpos === 0 ? '\\n' : this.subject.charAt(startpos - 1);\n\n    cc_after = this.peek();\n    if (cc_after === -1) {\n        char_after = '\\n';\n    } else {\n        char_after = fromCodePoint(cc_after);\n    }\n\n    after_is_whitespace = reWhitespaceChar.test(char_after);\n    after_is_punctuation = rePunctuation.test(char_after);\n    before_is_whitespace = reWhitespaceChar.test(char_before);\n    before_is_punctuation = rePunctuation.test(char_before);\n\n    left_flanking = !after_is_whitespace &&\n            !(after_is_punctuation && !before_is_whitespace && !before_is_punctuation);\n    right_flanking = !before_is_whitespace &&\n            !(before_is_punctuation && !after_is_whitespace && !after_is_punctuation);\n    if (cc === C_UNDERSCORE) {\n        can_open = left_flanking &&\n            (!right_flanking || before_is_punctuation);\n        can_close = right_flanking &&\n            (!left_flanking || after_is_punctuation);\n    } else if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        can_open = left_flanking && !right_flanking;\n        can_close = right_flanking;\n    } else {\n        can_open = left_flanking;\n        can_close = right_flanking;\n    }\n    this.pos = startpos;\n    return { numdelims: numdelims,\n             can_open: can_open,\n             can_close: can_close };\n};\n\n// Handle a delimiter marker for emphasis or a quote.\nvar handleDelim = function(cc, block) {\n    var res = this.scanDelims(cc);\n    if (!res) {\n        return false;\n    }\n    var numdelims = res.numdelims;\n    var startpos = this.pos;\n    var contents;\n\n    this.pos += numdelims;\n    if (cc === C_SINGLEQUOTE) {\n        contents = \"\\u2019\";\n    } else if (cc === C_DOUBLEQUOTE) {\n        contents = \"\\u201C\";\n    } else {\n        contents = this.subject.slice(startpos, this.pos);\n    }\n    var node = text(contents);\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    this.delimiters = { cc: cc,\n                        numdelims: numdelims,\n                        node: node,\n                        previous: this.delimiters,\n                        next: null,\n                        can_open: res.can_open,\n                        can_close: res.can_close,\n                        active: true };\n    if (this.delimiters.previous !== null) {\n        this.delimiters.previous.next = this.delimiters;\n    }\n\n    return true;\n\n};\n\nvar removeDelimiter = function(delim) {\n    if (delim.previous !== null) {\n        delim.previous.next = delim.next;\n    }\n    if (delim.next === null) {\n        // top of stack\n        this.delimiters = delim.previous;\n    } else {\n        delim.next.previous = delim.previous;\n    }\n};\n\nvar removeDelimitersBetween = function(bottom, top) {\n    if (bottom.next !== top) {\n        bottom.next = top;\n        top.previous = bottom;\n    }\n};\n\nvar processEmphasis = function(stack_bottom) {\n    var opener, closer, old_closer;\n    var opener_inl, closer_inl;\n    var tempstack;\n    var use_delims;\n    var tmp, next;\n    var opener_found;\n    var openers_bottom = [];\n\n    openers_bottom[C_UNDERSCORE] = stack_bottom;\n    openers_bottom[C_ASTERISK] = stack_bottom;\n    openers_bottom[C_SINGLEQUOTE] = stack_bottom;\n    openers_bottom[C_DOUBLEQUOTE] = stack_bottom;\n\n    // find first closer above stack_bottom:\n    closer = this.delimiters;\n    while (closer !== null && closer.previous !== stack_bottom) {\n        closer = closer.previous;\n    }\n    // move forward, looking for closers, and handling each\n    while (closer !== null) {\n        var closercc = closer.cc;\n        if (!(closer.can_close && (closercc === C_UNDERSCORE ||\n                                   closercc === C_ASTERISK ||\n                                   closercc === C_SINGLEQUOTE ||\n                                   closercc === C_DOUBLEQUOTE))) {\n            closer = closer.next;\n        } else {\n            // found emphasis closer. now look back for first matching opener:\n            opener = closer.previous;\n            opener_found = false;\n            while (opener !== null && opener !== stack_bottom &&\n                   opener !== openers_bottom[closercc]) {\n                if (opener.cc === closer.cc && opener.can_open) {\n                    opener_found = true;\n                    break;\n                }\n                opener = opener.previous;\n            }\n            old_closer = closer;\n\n            if (closercc === C_ASTERISK || closercc === C_UNDERSCORE) {\n                if (!opener_found) {\n                    closer = closer.next;\n                } else {\n                    // calculate actual number of delimiters used from closer\n                    if (closer.numdelims < 3 || opener.numdelims < 3) {\n                        use_delims = closer.numdelims <= opener.numdelims ?\n                            closer.numdelims : opener.numdelims;\n                    } else {\n                        use_delims = closer.numdelims % 2 === 0 ? 2 : 1;\n                    }\n\n                    opener_inl = opener.node;\n                    closer_inl = closer.node;\n\n                    // remove used delimiters from stack elts and inlines\n                    opener.numdelims -= use_delims;\n                    closer.numdelims -= use_delims;\n                    opener_inl._literal =\n                        opener_inl._literal.slice(0,\n                                                  opener_inl._literal.length - use_delims);\n                    closer_inl._literal =\n                        closer_inl._literal.slice(0,\n                                                  closer_inl._literal.length - use_delims);\n\n                    // build contents for new emph element\n                    var emph = new Node(use_delims === 1 ? 'Emph' : 'Strong');\n\n                    tmp = opener_inl._next;\n                    while (tmp && tmp !== closer_inl) {\n                        next = tmp._next;\n                        tmp.unlink();\n                        emph.appendChild(tmp);\n                        tmp = next;\n                    }\n\n                    opener_inl.insertAfter(emph);\n\n                    // remove elts between opener and closer in delimiters stack\n                    removeDelimitersBetween(opener, closer);\n\n                    // if opener has 0 delims, remove it and the inline\n                    if (opener.numdelims === 0) {\n                        opener_inl.unlink();\n                        this.removeDelimiter(opener);\n                    }\n\n                    if (closer.numdelims === 0) {\n                        closer_inl.unlink();\n                        tempstack = closer.next;\n                        this.removeDelimiter(closer);\n                        closer = tempstack;\n                    }\n\n                }\n\n            } else if (closercc === C_SINGLEQUOTE) {\n                closer.node._literal = \"\\u2019\";\n                if (opener_found) {\n                    opener.node._literal = \"\\u2018\";\n                }\n                closer = closer.next;\n\n            } else if (closercc === C_DOUBLEQUOTE) {\n                closer.node._literal = \"\\u201D\";\n                if (opener_found) {\n                    opener.node.literal = \"\\u201C\";\n                }\n                closer = closer.next;\n\n            }\n            if (!opener_found) {\n                // Set lower bound for future searches for openers:\n                openers_bottom[closercc] = old_closer.previous;\n                if (!old_closer.can_open) {\n                    // We can remove a closer that can't be an opener,\n                    // once we've seen there's no matching opener:\n                    this.removeDelimiter(old_closer);\n                }\n            }\n        }\n\n    }\n\n    // remove all delimiters\n    while (this.delimiters !== null && this.delimiters !== stack_bottom) {\n        this.removeDelimiter(this.delimiters);\n    }\n};\n\n// Attempt to parse link title (sans quotes), returning the string\n// or null if no match.\nvar parseLinkTitle = function() {\n    var title = this.match(reLinkTitle);\n    if (title === null) {\n        return null;\n    } else {\n        // chop off quotes from title and unescape:\n        return unescapeString(title.substr(1, title.length - 2));\n    }\n};\n\n// Attempt to parse link destination, returning the string or\n// null if no match.\nvar parseLinkDestination = function() {\n    var res = this.match(reLinkDestinationBraces);\n    if (res === null) {\n        res = this.match(reLinkDestination);\n        if (res === null) {\n            return null;\n        } else {\n            return normalizeURI(unescapeString(res));\n        }\n    } else {  // chop off surrounding <..>:\n        return normalizeURI(unescapeString(res.substr(1, res.length - 2)));\n    }\n};\n\n// Attempt to parse a link label, returning number of characters parsed.\nvar parseLinkLabel = function() {\n    var m = this.match(reLinkLabel);\n    if (m === null || m.length > 1001) {\n        return 0;\n    } else {\n        return m.length;\n    }\n};\n\n// Add open bracket to delimiter stack and add a text node to block's children.\nvar parseOpenBracket = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n\n    var node = text('[');\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    this.delimiters = { cc: C_OPEN_BRACKET,\n                        numdelims: 1,\n                        node: node,\n                        previous: this.delimiters,\n                        next: null,\n                        can_open: true,\n                        can_close: false,\n                        index: startpos,\n                        active: true };\n    if (this.delimiters.previous !== null) {\n        this.delimiters.previous.next = this.delimiters;\n    }\n\n    return true;\n\n};\n\n// IF next character is [, and ! delimiter to delimiter stack and\n// add a text node to block's children.  Otherwise just add a text node.\nvar parseBang = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n    if (this.peek() === C_OPEN_BRACKET) {\n        this.pos += 1;\n\n        var node = text('![');\n        block.appendChild(node);\n\n        // Add entry to stack for this opener\n        this.delimiters = { cc: C_BANG,\n                            numdelims: 1,\n                            node: node,\n                            previous: this.delimiters,\n                            next: null,\n                            can_open: true,\n                            can_close: false,\n                            index: startpos + 1,\n                            active: true };\n        if (this.delimiters.previous !== null) {\n            this.delimiters.previous.next = this.delimiters;\n        }\n    } else {\n        block.appendChild(text('!'));\n    }\n    return true;\n};\n\n// Try to match close bracket against an opening in the delimiter\n// stack.  Add either a link or image, or a plain [ character,\n// to block's children.  If there is a matching delimiter,\n// remove it from the delimiter stack.\nvar parseCloseBracket = function(block) {\n    var startpos;\n    var is_image;\n    var dest;\n    var title;\n    var matched = false;\n    var reflabel;\n    var opener;\n\n    this.pos += 1;\n    startpos = this.pos;\n\n    // look through stack of delimiters for a [ or ![\n    opener = this.delimiters;\n\n    while (opener !== null) {\n        if (opener.cc === C_OPEN_BRACKET || opener.cc === C_BANG) {\n            break;\n        }\n        opener = opener.previous;\n    }\n\n    if (opener === null) {\n        // no matched opener, just return a literal\n        block.appendChild(text(']'));\n        return true;\n    }\n\n    if (!opener.active) {\n        // no matched opener, just return a literal\n        block.appendChild(text(']'));\n        // take opener off emphasis stack\n        this.removeDelimiter(opener);\n        return true;\n    }\n\n    // If we got here, open is a potential opener\n    is_image = opener.cc === C_BANG;\n\n    // Check to see if we have a link/image\n\n    // Inline link?\n    if (this.peek() === C_OPEN_PAREN) {\n        this.pos++;\n        if (this.spnl() &&\n            ((dest = this.parseLinkDestination()) !== null) &&\n            this.spnl() &&\n            // make sure there's a space before the title:\n            (reWhitespaceChar.test(this.subject.charAt(this.pos - 1)) &&\n             (title = this.parseLinkTitle()) || true) &&\n            this.spnl() &&\n            this.peek() === C_CLOSE_PAREN) {\n            this.pos += 1;\n            matched = true;\n        }\n    } else {\n\n        // Next, see if there's a link label\n        var savepos = this.pos;\n        var beforelabel = this.pos;\n        var n = this.parseLinkLabel();\n        if (n === 0 || n === 2) {\n            // empty or missing second label\n            reflabel = this.subject.slice(opener.index, startpos);\n        } else {\n            reflabel = this.subject.slice(beforelabel, beforelabel + n);\n        }\n        if (n === 0) {\n            // If shortcut reference link, rewind before spaces we skipped.\n            this.pos = savepos;\n        }\n\n        // lookup rawlabel in refmap\n        var link = this.refmap[normalizeReference(reflabel)];\n        if (link) {\n            dest = link.destination;\n            title = link.title;\n            matched = true;\n        }\n    }\n\n    if (matched) {\n        var node = new Node(is_image ? 'Image' : 'Link');\n        node._destination = dest;\n        node._title = title || '';\n\n        var tmp, next;\n        tmp = opener.node._next;\n        while (tmp) {\n            next = tmp._next;\n            tmp.unlink();\n            node.appendChild(tmp);\n            tmp = next;\n        }\n        block.appendChild(node);\n        this.processEmphasis(opener.previous);\n\n        opener.node.unlink();\n\n        // processEmphasis will remove this and later delimiters.\n        // Now, for a link, we also deactivate earlier link openers.\n        // (no links in links)\n        if (!is_image) {\n          opener = this.delimiters;\n          while (opener !== null) {\n            if (opener.cc === C_OPEN_BRACKET) {\n                opener.active = false; // deactivate this opener\n            }\n            opener = opener.previous;\n          }\n        }\n\n        return true;\n\n    } else { // no match\n\n        this.removeDelimiter(opener);  // remove this opener from stack\n        this.pos = startpos;\n        block.appendChild(text(']'));\n        return true;\n    }\n\n};\n\n// Attempt to parse an entity.\nvar parseEntity = function(block) {\n    var m;\n    if ((m = this.match(reEntityHere))) {\n        block.appendChild(text(decodeHTML(m)));\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a run of ordinary characters, or a single character with\n// a special meaning in markdown, as a plain string.\nvar parseString = function(block) {\n    var m;\n    if ((m = this.match(reMain))) {\n        if (this.options.smart) {\n            block.appendChild(text(\n                m.replace(reEllipses, \"\\u2026\")\n                    .replace(reDash, function(chars) {\n                        var enCount = 0;\n                        var emCount = 0;\n                        if (chars.length % 3 === 0) { // If divisible by 3, use all em dashes\n                            emCount = chars.length / 3;\n                        } else if (chars.length % 2 === 0) { // If divisible by 2, use all en dashes\n                            enCount = chars.length / 2;\n                        } else if (chars.length % 3 === 2) { // If 2 extra dashes, use en dash for last 2; em dashes for rest\n                            enCount = 1;\n                            emCount = (chars.length - 2) / 3;\n                        } else { // Use en dashes for last 4 hyphens; em dashes for rest\n                            enCount = 2;\n                            emCount = (chars.length - 4) / 3;\n                        }\n                        return \"\\u2014\".repeat(emCount) + \"\\u2013\".repeat(enCount);\n                    })));\n        } else {\n            block.appendChild(text(m));\n        }\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a newline.  If it was preceded by two spaces, return a hard\n// line break; otherwise a soft line break.\nvar parseNewline = function(block) {\n    this.pos += 1; // assume we're at a \\n\n    // check previous node for trailing spaces\n    var lastc = block._lastChild;\n    if (lastc && lastc.type === 'Text' && lastc._literal[lastc._literal.length - 1] === ' ') {\n        var hardbreak = lastc._literal[lastc._literal.length - 2] === ' ';\n        lastc._literal = lastc._literal.replace(reFinalSpace, '');\n        block.appendChild(new Node(hardbreak ? 'Hardbreak' : 'Softbreak'));\n    } else {\n        block.appendChild(new Node('Softbreak'));\n    }\n    this.match(reInitialSpace); // gobble leading spaces in next line\n    return true;\n};\n\n// Attempt to parse a link reference, modifying refmap.\nvar parseReference = function(s, refmap) {\n    this.subject = s;\n    this.pos = 0;\n    var rawlabel;\n    var dest;\n    var title;\n    var matchChars;\n    var startpos = this.pos;\n\n    // label:\n    matchChars = this.parseLinkLabel();\n    if (matchChars === 0) {\n        return 0;\n    } else {\n        rawlabel = this.subject.substr(0, matchChars);\n    }\n\n    // colon:\n    if (this.peek() === C_COLON) {\n        this.pos++;\n    } else {\n        this.pos = startpos;\n        return 0;\n    }\n\n    //  link url\n    this.spnl();\n\n    dest = this.parseLinkDestination();\n    if (dest === null || dest.length === 0) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var beforetitle = this.pos;\n    this.spnl();\n    title = this.parseLinkTitle();\n    if (title === null) {\n        title = '';\n        // rewind before spaces\n        this.pos = beforetitle;\n    }\n\n    // make sure we're at line end:\n    var atLineEnd = true;\n    if (this.match(reSpaceAtEndOfLine) === null) {\n        if (title === '') {\n            atLineEnd = false;\n        } else {\n            // the potential title we found is not at the line end,\n            // but it could still be a legal link reference if we\n            // discard the title\n            title = '';\n            // rewind before spaces\n            this.pos = beforetitle;\n            // and instead check if the link URL is at the line end\n            atLineEnd = this.match(reSpaceAtEndOfLine) !== null;\n        }\n    }\n\n    if (!atLineEnd) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var normlabel = normalizeReference(rawlabel);\n    if (normlabel === '') {\n        // label must contain non-whitespace characters\n        this.pos = startpos;\n        return 0;\n    }\n\n    if (!refmap[normlabel]) {\n        refmap[normlabel] = { destination: dest, title: title };\n    }\n    return this.pos - startpos;\n};\n\n// Parse the next inline element in subject, advancing subject position.\n// On success, add the result to block's children and return true.\n// On failure, return false.\nvar parseInline = function(block) {\n    var res = false;\n    var c = this.peek();\n    if (c === -1) {\n        return false;\n    }\n    switch(c) {\n    case C_NEWLINE:\n        res = this.parseNewline(block);\n        break;\n    case C_BACKSLASH:\n        res = this.parseBackslash(block);\n        break;\n    case C_BACKTICK:\n        res = this.parseBackticks(block);\n        break;\n    case C_ASTERISK:\n    case C_UNDERSCORE:\n        res = this.handleDelim(c, block);\n        break;\n    case C_SINGLEQUOTE:\n    case C_DOUBLEQUOTE:\n        res = this.options.smart && this.handleDelim(c, block);\n        break;\n    case C_OPEN_BRACKET:\n        res = this.parseOpenBracket(block);\n        break;\n    case C_BANG:\n        res = this.parseBang(block);\n        break;\n    case C_CLOSE_BRACKET:\n        res = this.parseCloseBracket(block);\n        break;\n    case C_LESSTHAN:\n        res = this.parseAutolink(block) || this.parseHtmlTag(block);\n        break;\n    case C_AMPERSAND:\n        res = this.parseEntity(block);\n        break;\n    default:\n        res = this.parseString(block);\n        break;\n    }\n    if (!res) {\n        this.pos += 1;\n        block.appendChild(text(fromCodePoint(c)));\n    }\n\n    return true;\n};\n\n// Parse string content in block into inline children,\n// using refmap to resolve references.\nvar parseInlines = function(block) {\n    this.subject = block._string_content.trim();\n    this.pos = 0;\n    this.delimiters = null;\n    while (this.parseInline(block)) {\n    }\n    block._string_content = null; // allow raw string to be garbage collected\n    this.processEmphasis(null);\n};\n\n// The InlineParser object.\nfunction InlineParser(options){\n    return {\n        subject: '',\n        delimiters: null,  // used by handleDelim method\n        pos: 0,\n        refmap: {},\n        match: match,\n        peek: peek,\n        spnl: spnl,\n        parseBackticks: parseBackticks,\n        parseBackslash: parseBackslash,\n        parseAutolink: parseAutolink,\n        parseHtmlTag: parseHtmlTag,\n        scanDelims: scanDelims,\n        handleDelim: handleDelim,\n        parseLinkTitle: parseLinkTitle,\n        parseLinkDestination: parseLinkDestination,\n        parseLinkLabel: parseLinkLabel,\n        parseOpenBracket: parseOpenBracket,\n        parseCloseBracket: parseCloseBracket,\n        parseBang: parseBang,\n        parseEntity: parseEntity,\n        parseString: parseString,\n        parseNewline: parseNewline,\n        parseReference: parseReference,\n        parseInline: parseInline,\n        processEmphasis: processEmphasis,\n        removeDelimiter: removeDelimiter,\n        options: options || {},\n        parse: parseInlines\n    };\n}\n\nmodule.exports = InlineParser;\n"},"lineCount":932}},"error":null,"hash":"f7cd28e9ed49321365fe0ea247082ce9","cacheData":{"env":{}}}