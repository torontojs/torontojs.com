{"id":"../node_modules/core-js/modules/es7.string.match-all.js","dependencies":[{"name":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/package.json","includedInParent":true,"mtime":1572820182646},{"name":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/package.json","includedInParent":true,"mtime":1572818838640},{"name":"./_export","loc":{"line":3,"column":26},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/es7.string.match-all.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/_export.js"},{"name":"./_defined","loc":{"line":4,"column":26},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/es7.string.match-all.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/_defined.js"},{"name":"./_to-length","loc":{"line":5,"column":26},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/es7.string.match-all.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/_to-length.js"},{"name":"./_is-regexp","loc":{"line":6,"column":26},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/es7.string.match-all.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/_is-regexp.js"},{"name":"./_flags","loc":{"line":7,"column":26},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/es7.string.match-all.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/_flags.js"},{"name":"./_iter-create","loc":{"line":15,"column":8},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/es7.string.match-all.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/_iter-create.js"}],"generated":{"js":"'use strict';\n// https://tc39.github.io/String.prototype.matchAll/\nvar $export     = require('./_export')\n  , defined     = require('./_defined')\n  , toLength    = require('./_to-length')\n  , isRegExp    = require('./_is-regexp')\n  , getFlags    = require('./_flags')\n  , RegExpProto = RegExp.prototype;\n\nvar $RegExpStringIterator = function(regexp, string){\n  this._r = regexp;\n  this._s = string;\n};\n\nrequire('./_iter-create')($RegExpStringIterator, 'RegExp String', function next(){\n  var match = this._r.exec(this._s);\n  return {value: match, done: match === null};\n});\n\n$export($export.P, 'String', {\n  matchAll: function matchAll(regexp){\n    defined(this);\n    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');\n    var S     = String(this)\n      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)\n      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\n    rx.lastIndex = toLength(regexp.lastIndex);\n    return new $RegExpStringIterator(rx, S);\n  }\n});"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/core-js/modules/es7.string.match-all.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"../node_modules/core-js/modules/es7.string.match-all.js":"'use strict';\n// https://tc39.github.io/String.prototype.matchAll/\nvar $export     = require('./_export')\n  , defined     = require('./_defined')\n  , toLength    = require('./_to-length')\n  , isRegExp    = require('./_is-regexp')\n  , getFlags    = require('./_flags')\n  , RegExpProto = RegExp.prototype;\n\nvar $RegExpStringIterator = function(regexp, string){\n  this._r = regexp;\n  this._s = string;\n};\n\nrequire('./_iter-create')($RegExpStringIterator, 'RegExp String', function next(){\n  var match = this._r.exec(this._s);\n  return {value: match, done: match === null};\n});\n\n$export($export.P, 'String', {\n  matchAll: function matchAll(regexp){\n    defined(this);\n    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');\n    var S     = String(this)\n      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)\n      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\n    rx.lastIndex = toLength(regexp.lastIndex);\n    return new $RegExpStringIterator(rx, S);\n  }\n});"},"lineCount":30}},"error":null,"hash":"8a443bdf8f1678d22cf1b058f236bcb1","cacheData":{"env":{}}}