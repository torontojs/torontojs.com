{"id":"../node_modules/core-js/modules/es6.regexp.split.js","dependencies":[{"name":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/package.json","includedInParent":true,"mtime":1572820182646},{"name":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/package.json","includedInParent":true,"mtime":1572818838640},{"name":"./_fix-re-wks","loc":{"line":2,"column":8},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/es6.regexp.split.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/_fix-re-wks.js"},{"name":"./_is-regexp","loc":{"line":4,"column":27},"parent":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/es6.regexp.split.js","resolved":"/Users/alex-wilmer/Projects/torontojs/torontojs.com/node_modules/core-js/modules/_is-regexp.js"}],"generated":{"js":"// @@split logic\nrequire('./_fix-re-wks')('split', 2, function(defined, SPLIT, $split){\n  'use strict';\n  var isRegExp   = require('./_is-regexp')\n    , _split     = $split\n    , $push      = [].push\n    , $SPLIT     = 'split'\n    , LENGTH     = 'length'\n    , LAST_INDEX = 'lastIndex';\n  if(\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ){\n    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n    // based on es5-shim implementation, need to rework it\n    $split = function(separator, limit){\n      var string = String(this);\n      if(separator === undefined && limit === 0)return [];\n      // If `separator` is not a regex, use native split\n      if(!isRegExp(separator))return _split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var separator2, match, lastIndex, lastLength, i;\n      // Doesn't need flags gy, but they don't hurt\n      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n      while(match = separatorCopy.exec(string)){\n        // `separatorCopy.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0][LENGTH];\n        if(lastIndex > lastLastIndex){\n          output.push(string.slice(lastLastIndex, match.index));\n          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){\n            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;\n          });\n          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if(output[LENGTH] >= splitLimit)break;\n        }\n        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if(lastLastIndex === string[LENGTH]){\n        if(lastLength || !separatorCopy.test(''))output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){\n    $split = function(separator, limit){\n      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n    };\n  }\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return [function split(separator, limit){\n    var O  = defined(this)\n      , fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n  }, $split];\n});"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/core-js/modules/es6.regexp.split.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}}],"sources":{"../node_modules/core-js/modules/es6.regexp.split.js":"// @@split logic\nrequire('./_fix-re-wks')('split', 2, function(defined, SPLIT, $split){\n  'use strict';\n  var isRegExp   = require('./_is-regexp')\n    , _split     = $split\n    , $push      = [].push\n    , $SPLIT     = 'split'\n    , LENGTH     = 'length'\n    , LAST_INDEX = 'lastIndex';\n  if(\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ){\n    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n    // based on es5-shim implementation, need to rework it\n    $split = function(separator, limit){\n      var string = String(this);\n      if(separator === undefined && limit === 0)return [];\n      // If `separator` is not a regex, use native split\n      if(!isRegExp(separator))return _split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var separator2, match, lastIndex, lastLength, i;\n      // Doesn't need flags gy, but they don't hurt\n      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n      while(match = separatorCopy.exec(string)){\n        // `separatorCopy.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0][LENGTH];\n        if(lastIndex > lastLastIndex){\n          output.push(string.slice(lastLastIndex, match.index));\n          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){\n            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;\n          });\n          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if(output[LENGTH] >= splitLimit)break;\n        }\n        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if(lastLastIndex === string[LENGTH]){\n        if(lastLength || !separatorCopy.test(''))output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){\n    $split = function(separator, limit){\n      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n    };\n  }\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return [function split(separator, limit){\n    var O  = defined(this)\n      , fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n  }, $split];\n});"},"lineCount":70}},"error":null,"hash":"5f65a751c9c39f17c520b3cede4c35c3","cacheData":{"env":{}}}